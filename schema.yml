openapi: 3.0.3
info:
  title: Home Services API
  version: 0.0.0
paths:
  /:
    get:
      operationId: root_retrieve
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /{id}/:
    get:
      operationId: root_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api-token-auth/:
    post:
      operationId: api_token_auth_create
      tags:
      - api-token-auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /booking_user/{id}/:
    post:
      operationId: booking_user_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - booking_user
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /complete_appointment/{id}:
    put:
      operationId: complete_appointment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - complete_appointment
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /confirm_appointment/{id}:
    put:
      operationId: confirm_appointment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - confirm_appointment
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /delete-account/:
    delete:
      operationId: delete_account_destroy
      tags:
      - delete-account
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /edit-profile/:
    get:
      operationId: edit_profile_retrieve
      tags:
      - edit-profile
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: edit_profile_update
      tags:
      - edit-profile
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /edit-work-info/:
    get:
      operationId: edit_work_info_retrieve
      tags:
      - edit-work-info
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: edit_work_info_update
      tags:
      - edit-work-info
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /edit_booking/{id}:
    get:
      operationId: edit_booking_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - edit_booking
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: edit_booking_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - edit_booking
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: edit_booking_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - edit_booking
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /email-change/:
    post:
      operationId: email_change_create
      tags:
      - email-change
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /login/:
    post:
      operationId: login_create
      tags:
      - login
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /logout/:
    post:
      operationId: logout_create
      tags:
      - logout
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /password-change/:
    post:
      operationId: password_change_create
      tags:
      - password-change
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /profile/:
    get:
      operationId: profile_retrieve
      tags:
      - profile
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /profiles/:
    get:
      operationId: profiles_list
      parameters:
      - in: query
        name: fname
        schema:
          type: string
      - in: query
        name: lname
        schema:
          type: string
      tags:
      - profiles
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderProfile'
          description: ''
    post:
      operationId: profiles_create
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProviderProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProviderProfile'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderProfile'
          description: ''
  /profiles/{id}/:
    get:
      operationId: profiles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: profiles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProviderProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProviderProfile'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderProfile'
          description: ''
    patch:
      operationId: profiles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProviderProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProviderProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProviderProfile'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderProfile'
          description: ''
    delete:
      operationId: profiles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - profiles
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /register/:
    post:
      operationId: register_create
      tags:
      - register
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    CityEnum:
      enum:
      - Homs
      type: string
      description: '* `Homs` - Homs'
    GenderEnum:
      enum:
      - male
      - female
      type: string
      description: |-
        * `male` - male
        * `female` - female
    HomeAddressEnum:
      enum:
      - AlGhoota
      - AlHamra
      - AlWa3r
      - Alinshaat
      - Alhadara
      type: string
      description: |-
        * `AlGhoota` - AlGhoota
        * `AlHamra` - AlHamra
        * `AlWa3r` - AlWa3r
        * `Alinshaat` - Alinshaat
        * `Alhadara` - Alhadara
    NullEnum:
      enum:
      - null
    PatchedProviderProfile:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        pk:
          type: integer
          readOnly: true
          title: ID
        fname:
          type: string
          nullable: true
          maxLength: 200
        lname:
          type: string
          nullable: true
          maxLength: 200
        photo:
          type: string
          format: uri
          nullable: true
        bdate:
          type: string
          format: date
          nullable: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        city:
          $ref: '#/components/schemas/CityEnum'
        home_address:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/HomeAddressEnum'
          - $ref: '#/components/schemas/NullEnum'
        phone:
          type: string
          maxLength: 50
        is_craftsman:
          type: boolean
        service:
          type: integer
          nullable: true
        description:
          type: string
          nullable: true
        work_from:
          type: string
          format: time
          nullable: true
        work_to:
          type: string
          format: time
          nullable: true
        price_from:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          nullable: true
        price_to:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          nullable: true
        work_address:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/WorkAddressEnum'
          - $ref: '#/components/schemas/NullEnum'
    ProviderProfile:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        pk:
          type: integer
          readOnly: true
          title: ID
        fname:
          type: string
          nullable: true
          maxLength: 200
        lname:
          type: string
          nullable: true
          maxLength: 200
        photo:
          type: string
          format: uri
          nullable: true
        bdate:
          type: string
          format: date
          nullable: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        city:
          $ref: '#/components/schemas/CityEnum'
        home_address:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/HomeAddressEnum'
          - $ref: '#/components/schemas/NullEnum'
        phone:
          type: string
          maxLength: 50
        is_craftsman:
          type: boolean
        service:
          type: integer
          nullable: true
        description:
          type: string
          nullable: true
        work_from:
          type: string
          format: time
          nullable: true
        work_to:
          type: string
          format: time
          nullable: true
        price_from:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          nullable: true
        price_to:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
          nullable: true
        work_address:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/WorkAddressEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - phone
      - pk
      - user
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
      - username
    WorkAddressEnum:
      enum:
      - AlGhoota
      - AlHamra
      - AlWa3r
      - Alinshaat
      - Alhadara
      type: string
      description: |-
        * `AlGhoota` - AlGhoota
        * `AlHamra` - AlHamra
        * `AlWa3r` - AlWa3r
        * `Alinshaat` - Alinshaat
        * `Alhadara` - Alhadara
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
